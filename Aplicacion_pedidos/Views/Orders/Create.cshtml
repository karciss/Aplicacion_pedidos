@model Aplicacion_pedidos.Models.OrderModel

@{
    ViewData["Title"] = "Crear Pedido";
}

<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0"><i class="bi bi-plus-circle me-2"></i>Crear Nuevo Pedido</h2>
        <p class="text-muted">Complete la información para registrar un nuevo pedido</p>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i> Volver al Listado
        </a>
    </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm">
    <div class="card-header bg-white py-3">
        <h5 class="mb-0">Información del Pedido</h5>
    </div>
    <div class="card-body">
        <form asp-action="CreateSimple" method="post" id="orderForm">
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Cliente <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person"></i></span>
                            <select name="userId" class="form-select" required id="userId">
                                <option value="">-- Seleccionar Cliente --</option>
                                @foreach (SelectListItem item in ViewBag.UserId)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <small class="text-muted">Seleccione un cliente para el pedido</small>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Fecha <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-calendar-date"></i></span>
                            <input type="datetime-local" name="fechaPedido" class="form-control" 
                                value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Estado <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-tag"></i></span>
                            <select name="estado" class="form-select" required>
                                @foreach (var estado in Enum.GetValues(typeof(OrderStatus)))
                                {
                                    <option value="@estado" selected="@(estado.ToString() == OrderStatus.Pendiente.ToString())">@estado</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="border-top pt-3 text-end">
                <button type="submit" class="btn btn-primary" id="submitButton">
                    <i class="bi bi-plus-circle me-1"></i> Crear Pedido
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary ms-1">
                    <i class="bi bi-x-circle me-1"></i> Cancelar
                </a>
            </div>
        </form>
    </div>
</div>

<div class="alert alert-info mt-4">
    <i class="bi bi-info-circle-fill me-2"></i> Después de crear el pedido, podrá agregarle productos.
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Validación básica en el cliente
            $("#orderForm").submit(function(e) {
                let isValid = true;
                const userId = $("#userId").val();
                
                // Validar que se haya seleccionado un cliente
                if (!userId || userId === "") {
                    isValid = false;
                    $("#userId").addClass("is-invalid");
                    alert("Debe seleccionar un cliente para crear el pedido.");
                }
                
                if (!isValid) {
                    e.preventDefault();
                    return false;
                }
                
                // Prevenir doble envío del formulario
                $("#submitButton").prop("disabled", true);
                $("#submitButton").html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creando...');
                return true;
            });
            
            // Limpiar error al cambiar la selección
            $("#userId").change(function() {
                if ($(this).val() !== "") {
                    $(this).removeClass("is-invalid");
                }
            });
        });
    </script>
}
