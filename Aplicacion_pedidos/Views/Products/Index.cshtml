@model IEnumerable<Aplicacion_pedidos.Models.ProductModel>

@{
    ViewData["Title"] = "Productos";
    var currentFilter = ViewData["CurrentFilter"] as string ?? "";
    var currentCategoria = ViewData["CurrentCategoria"] as string ?? "Todas";
    var currentPrecioMin = ViewData["CurrentPrecioMin"] as decimal? ?? 0;
    var currentPrecioMax = ViewData["CurrentPrecioMax"] as decimal? ?? 10000;
    var precioMinimoDisponible = ViewData["PrecioMinimoDisponible"] as decimal? ?? 0;
    var precioMaximoDisponible = ViewData["PrecioMaximoDisponible"] as decimal? ?? 1000;
}

<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0"><i class="bi bi-box2-heart me-2"></i>Catálogo de Productos</h2>
        <p class="text-muted">Administre el catálogo de productos disponibles</p>
    </div>
    <div class="col-md-6 text-end">
        @if (User.IsInRole(UserModel.ROLE_ADMIN) || User.IsInRole(UserModel.ROLE_EMPLEADO))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Crear Nuevo Producto
            </a>
        }
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm mb-4">
    <div class="card-header bg-white py-2">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="bi bi-search me-2"></i>Buscar y Filtrar</h5>
            <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="true" aria-controls="filterCollapse">
                <i class="bi bi-chevron-down"></i>
            </button>
        </div>
    </div>
    <div class="collapse show" id="filterCollapse">
        <div class="card-body py-2">
            <form asp-action="Index" method="get" id="searchForm" class="row g-2 align-items-end">
                <div class="col-md-4">
                    <label for="searchString" class="form-label small mb-1">Buscar</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchString" name="searchString" class="form-control border-start-0" placeholder="Por nombre o descripción..." value="@currentFilter" />
                        @if (!string.IsNullOrEmpty(currentFilter))
                        {
                            <button type="button" class="btn btn-outline-secondary border-start-0" onclick="clearSearch('searchString')">
                                <i class="bi bi-x"></i>
                            </button>
                        }
                    </div>
                </div>
                
                <div class="col-md-2">
                    <label for="categoria" class="form-label small mb-1">Categoría</label>
                    <select id="categoria" name="categoria" class="form-select">
                        @if (ViewData["Categorias"] is SelectList categorias)
                        {
                            @foreach (var item in categorias)
                            {
                                if (item.Value == currentCategoria)
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        }
                        else
                        {
                            <option value="Todas">Todas</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="precioMin" class="form-label small mb-1">Precio mín.</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                        <input type="number" id="precioMin" name="precioMin" class="form-control" placeholder="Min" value="@currentPrecioMin" min="0" step="0.01" />
                    </div>
                </div>
                
                <div class="col-md-2">
                    <label for="precioMax" class="form-label small mb-1">Precio máx.</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                        <input type="number" id="precioMax" name="precioMax" class="form-control" placeholder="Max" value="@currentPrecioMax" min="0" step="0.01" />
                    </div>
                </div>
                
                <div class="col-md-2">
                    <div class="d-flex">
                        <button type="submit" class="btn btn-primary w-100 me-1" title="Buscar productos">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary" title="Limpiar filtros">
                            <i class="bi bi-arrow-clockwise"></i>
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-header bg-white py-3">
        <div class="row align-items-center">
            <div class="col">
                <h5 class="mb-0">Listado de Productos</h5>
                @if (!string.IsNullOrEmpty(currentFilter) || currentCategoria != "Todas" || currentPrecioMin > 0 || currentPrecioMax < 10000)
                {
                    <small class="text-muted d-block mt-1">
                        <i class="bi bi-funnel-fill me-1"></i> Filtros activos:
                        @if (!string.IsNullOrEmpty(currentFilter))
                        {
                            <span class="badge bg-light text-dark me-1">Texto: @currentFilter</span>
                        }
                        @if (currentCategoria != "Todas")
                        {
                            <span class="badge bg-light text-dark me-1">Categoría: @currentCategoria</span>
                        }
                        @if (currentPrecioMin > 0 || currentPrecioMax < 10000)
                        {
                            <span class="badge bg-light text-dark me-1">Precio: @currentPrecioMin.ToString("C") - @currentPrecioMax.ToString("C")</span>
                        }
                    </small>
                }
            </div>
            <div class="col-auto">
                <span class="badge bg-info">@Model.Count() productos encontrados</span>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th class="ps-3">
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Categoria)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Descripcion)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Precio)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Stock)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model.Disponible)
                        </th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model) {
                    <tr>
                        <td class="ps-3">
                            <div class="d-flex align-items-center">
                                <div class="product-circle me-2">
                                    <i class="bi bi-box2-heart"></i>
                                </div>
                                <span class="fw-medium">@Html.DisplayFor(modelItem => item.Nombre)</span>
                            </div>
                        </td>
                        <td>
                            <span class="badge bg-secondary">@(string.IsNullOrEmpty(item.Categoria) ? "Sin categoría" : item.Categoria)</span>
                        </td>
                        <td>
                            <div class="description-cell">
                                @Html.DisplayFor(modelItem => item.Descripcion)
                            </div>
                        </td>
                        <td>
                            <span class="badge bg-info text-dark">
                                <i class="bi bi-tag-fill me-1"></i>
                                @Html.DisplayFor(modelItem => item.Precio)
                            </span>
                        </td>
                        <td>
                            <div class="stock-indicator">
                                @if (item.Stock > 10)
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i> @Html.DisplayFor(modelItem => item.Stock)
                                    </span>
                                }
                                else if (item.Stock > 0)
                                {
                                    <span class="badge bg-warning text-dark">
                                        <i class="bi bi-exclamation-triangle me-1"></i> @Html.DisplayFor(modelItem => item.Stock)
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">
                                        <i class="bi bi-x-circle me-1"></i> Agotado
                                    </span>
                                }
                            </div>
                        </td>
                        <td class="text-center">
                            @if (item.Disponible)
                            {
                                <span class="badge bg-success"><i class="bi bi-check-circle"></i></span>
                            }
                            else
                            {
                                <span class="badge bg-secondary"><i class="bi bi-dash-circle"></i></span>
                            }
                        </td>
                        <td>
                            <div class="text-center">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">
                                    <i class="bi bi-info-circle"></i>
                                </a>

                                @if (User.IsInRole(UserModel.ROLE_ADMIN) || User.IsInRole(UserModel.ROLE_EMPLEADO))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                }

                                @if (User.IsInRole(UserModel.ROLE_ADMIN))
                                {
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        @if(!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-search" style="font-size: 3rem; color: #ccc;"></i>
                <p class="text-muted mt-3">No se encontraron productos con los criterios de búsqueda actuales.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add subtle animation when hovering over table rows
            $("table tbody tr").hover(
                function() { $(this).addClass("table-hover-effect"); },
                function() { $(this).removeClass("table-hover-effect"); }
            );
            
            // Auto-dismiss alerts after 5 seconds
            setTimeout(function() {
                $(".alert").alert('close');
            }, 5000);
        });
        
        // Función para limpiar la búsqueda
        function clearSearch(fieldId) {
            $('#' + fieldId).val('');
            $('#searchForm').submit();
        }
    </script>
}
